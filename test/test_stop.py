# coding: utf-8

"""
    MBTA

    MBTA service API. https://www.mbta.com Source code: https://github.com/mbta/api  # noqa: E501

    The version of the OpenAPI document: 3.0
    Contact: developer@mbta.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.stop import Stop  # noqa: E501
from openapi_client.rest import ApiException

class TestStop(unittest.TestCase):
    """Stop unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Stop
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.stop.Stop()  # noqa: E501
        if include_optional :
            return Stop(
                links = openapi_client.models.service_links.Service_links(
                    self = '0', ), 
                included = [
                    openapi_client.models.service_included.Service_included(
                        type = '0', 
                        id = '0', )
                    ], 
                data = openapi_client.models.stop_resource.StopResource(
                    type = '0', 
                    relationships = openapi_client.models.stop_resource_relationships.StopResource_relationships(
                        parent_station = openapi_client.models.stop_resource_relationships_parent_station.StopResource_relationships_parent_station(
                            links = openapi_client.models.stop_resource_relationships_parent_station_links.StopResource_relationships_parent_station_links(
                                self = '0', 
                                related = '0', ), 
                            data = openapi_client.models.stop_resource_relationships_parent_station_data.StopResource_relationships_parent_station_data(
                                type = '0', 
                                id = '0', ), ), ), 
                    links = openapi_client.models.links.links(), 
                    id = '0', 
                    attributes = openapi_client.models.stop_resource_attributes.StopResource_attributes(
                        wheelchair_boarding = 0, 
                        name = 'Parker St @ Hagen Rd', 
                        longitude = 42.316115, 
                        location_type = 56, 
                        latitude = -71.194994, ), )
            )
        else :
            return Stop(
                data = openapi_client.models.stop_resource.StopResource(
                    type = '0', 
                    relationships = openapi_client.models.stop_resource_relationships.StopResource_relationships(
                        parent_station = openapi_client.models.stop_resource_relationships_parent_station.StopResource_relationships_parent_station(
                            links = openapi_client.models.stop_resource_relationships_parent_station_links.StopResource_relationships_parent_station_links(
                                self = '0', 
                                related = '0', ), 
                            data = openapi_client.models.stop_resource_relationships_parent_station_data.StopResource_relationships_parent_station_data(
                                type = '0', 
                                id = '0', ), ), ), 
                    links = openapi_client.models.links.links(), 
                    id = '0', 
                    attributes = openapi_client.models.stop_resource_attributes.StopResource_attributes(
                        wheelchair_boarding = 0, 
                        name = 'Parker St @ Hagen Rd', 
                        longitude = 42.316115, 
                        location_type = 56, 
                        latitude = -71.194994, ), ),
        )

    def testStop(self):
        """Test Stop"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
